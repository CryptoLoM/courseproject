from hight import *


if __name__ == "__main__":
    key_path = "keys/keyy.bin"
    input_file = "files/SCrypto.pdf"
    encrypted_file = "SCrypto.pdf.bin"
    decrypted_file = "decrypted_SCrypto.pdf"

    # generate key if not exists
    if not os.path.exists(key_path):
        with open(key_path, "wb") as f:
            f.write(b"1234567890abcdef")

    print("üîê –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è...")
    start_encrypt = time.perf_counter()
    process_file(input_file, encrypted_file, key_path, mode='encrypt')
    end_encrypt = time.perf_counter()
    encrypt_time = end_encrypt - start_encrypt
    print("‚úÖ –§–∞–π–ª –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ:", encrypted_file)
    print(f"–ß–∞—Å —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É —à–∏—Ñ—Ä–æ–º HIGHT: {encrypt_time:.2f} —Å–µ–∫—É–Ω–¥")

    print("üîì –î–µ—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è...")
    start_decrypt = time.perf_counter()
    process_file(encrypted_file, decrypted_file, key_path, mode='decrypt')
    end_decrypt = time.perf_counter()
    decrypt_time = end_decrypt - start_decrypt
    print("‚úÖ –§–∞–π–ª —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ:", decrypted_file)
    print(f"–ß–∞—Å —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É —à–∏—Ñ—Ä–æ–º HIGHT: {decrypt_time:.2f} —Å–µ–∫—É–Ω–¥")

#  or if u want with GUI then comment upper code and uncomment this:
#  run.gui()


